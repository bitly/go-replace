Go Lineinfile tests:

  $ CURRENT="$(pwd)"
  $ cd "$TESTDIR/../"
  $ go build -o go-replace
  $ cd "$CURRENT"
  $ alias go-replace="$TESTDIR/../go-replace"

Exec test:

  $ go-replace -h > /dev/null


Testing lineinfile mode:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile -s foobar -r ___xxx test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___xxx
  this is the last line

Testing lineinfile mode with multiple matches:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the foobar forth foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile -s foobar -r ___xxx test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___xxx
  ___xxx
  this is the last line

Testing lineinfile mode with multiple matches and --once:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the foobar forth foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile -s foobar -r ___xxx --once test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___xxx
  this is the foobar forth foobar line
  this is the last line

Testing lineinfile mode with multiple matches and --once=unique:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the foobar forth foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile -s foobar -r ___xxx --once=unique test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___xxx
  this is the last line

Testing lineinfile mode without match:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the foobar forth foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile -s barfoo -r ___xxx --once=unique test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  this is the third foobar line
  this is the foobar forth foobar line
  this is the last line
  ___xxx

Testing lineinfile mode with regex:

  $ cat > test.txt <<EOF
  > this is a testline
  > this is the second line
  > this is the third foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile --regex --regex-backrefs -s 'f[o]+(b[a]*r)' -r '___$1' test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___bar
  this is the last line
  $ go-replace  --mode=lineinfile --regex --regex-backrefs -s 'not-existing-line' -r '___$1' test.txt
  $ cat test.txt
  this is a testline
  this is the second line
  ___bar
  this is the last line
  ___

Testing lineinfile mode with lineinfile-before:

  $ cat > test.txt <<EOF
  > this is a testline
  > #global#
  > this is the second line
  > this is the third foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile --lineinfile-before="#global#" -s 'notexisting' -r 'example=foobar' test.txt
  $ cat test.txt
  this is a testline
  example=foobar
  #global#
  this is the second line
  this is the third foobar line
  this is the last line

Testing lineinfile mode with lineinfile-after:

  $ cat > test.txt <<EOF
  > this is a testline
  > #global#
  > this is the second line
  > this is the third foobar line
  > this is the last line
  > EOF
  $ go-replace --mode=lineinfile --lineinfile-after="#global#" -s 'notexisting' -r 'example=foobar' test.txt
  $ cat test.txt
  this is a testline
  #global#
  example=foobar
  this is the second line
  this is the third foobar line
  this is the last line
